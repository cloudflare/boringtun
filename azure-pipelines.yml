jobs:

- job: Windows
  displayName: 'Windows'
  pool:
    vmImage: 'vs2017-win2016'
  continueOnError: true
  steps:
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain stable --default-host x86_64-pc-windows-msvc
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    displayName: 'Install Rust'
  - script: |
      cargo build --lib
    displayName: 'Build library'
  - script: |
      cargo test --lib
    displayName: 'Test library'

- job: macOS
  displayName: 'macOS'
  pool:
    vmImage: 'macOS-10.15'
  continueOnError: true
  steps:
  - script: |
      brew install wireguard-go wireguard-tools
    displayName: 'Install wireguard-go'
  - template: ci/azure-build.yml
    parameters:
      runBinaryTests: 'false'
  - script: |
      export PATH=$PATH:$HOME/.cargo/bin
      rustup target add aarch64-apple-ios
      cargo build --lib --target aarch64-apple-ios
    displayName: 'Build library for iOS'
  - script: |
      export PATH=$PATH:$HOME/.cargo/bin
      rustup component add rustfmt
      cargo fmt --all -- --check
    displayName: 'Cargo fmt'

- job: Linux_x86_64
  displayName: 'Linux x86-64'
  pool:
    vmImage: 'ubuntu-16.04'
  continueOnError: true
  steps:
  - script: |
      sudo add-apt-repository ppa:wireguard/wireguard
      sudo apt-get update
      sudo apt-get install wireguard -y
    displayName: 'Install wireguard'
  - template: ci/azure-build.yml
  - script: |
      export PATH=$PATH:$HOME/.cargo/bin
      rustup component add rustfmt
      cargo fmt --all -- --check
    displayName: 'Cargo fmt'

- job: Linux_aarch64
  displayName: 'Linux aarch64'
  pool:
    name: default
    demands: agent.name -equals aarch64
  continueOnError: true
  steps:
  - template: ci/azure-build.yml

- job: Linux_armv7
  displayName: 'Linux armv7'
  pool: 
    name: default
    demands: agent.name -equals armv7
  continueOnError: true
  steps:
  - template: ci/azure-build.yml