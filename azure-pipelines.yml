jobs:

- job: Windows
  displayName: 'Windows'
  pool:
    vmImage: 'vs2017-win2016'
  continueOnError: true
  steps:
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain stable --default-host x86_64-pc-windows-msvc
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    displayName: 'Install Rust'
  - script: |
      cargo build --lib --no-default-features
    displayName: 'Build library'
  - script: |
      cargo test --lib --no-default-features
    displayName: 'Test library'

- job: macOS_x86_64
  displayName: 'macOS x86-64'
  pool:
    name: Self Hosted ARM
    demands: agent.name -equals intelmac
  continueOnError: true
  steps:
  - template: ci/azure-build.yml
  - script: |
      export PATH=$PATH:$HOME/.cargo/bin
      rustup target add aarch64-apple-ios
      cargo build --lib --no-default-features --target aarch64-apple-ios
    displayName: 'Build library for iOS'
  - script: |
      export PATH=$PATH:$HOME/.cargo/bin
      rustup component add rustfmt
      cargo fmt --all -- --check
    displayName: 'Cargo fmt'

- job: macOS_arm64
  displayName: 'macOS arm64'
  pool:
    name: Self Hosted ARM
    demands: agent.name -equals m1mac
  continueOnError: true
  steps:
  - template: ci/azure-build.yml
  - script: |
      export PATH=$PATH:$HOME/.cargo/bin
      rustup target add aarch64-apple-ios
      cargo build --lib --no-default-features --target aarch64-apple-ios
    displayName: 'Build library for iOS'
  - script: |
      export PATH=$PATH:$HOME/.cargo/bin
      rustup component add rustfmt
      cargo fmt --all -- --check
    displayName: 'Cargo fmt'

- job: Linux_x86_64
  displayName: 'Linux x86-64'
  pool:
    vmImage: 'ubuntu-20.04'
  continueOnError: true
  steps:
  - script: |
      sudo apt-get update
      sudo apt-get install wireguard -y
    displayName: 'Install wireguard'
  - script: |
      sudo apt-get install jq -y
      sudo sh -c "cat /etc/docker/daemon.json | jq --arg cidr \"2001:db8:1::/64\" '. + {ipv6: true, \"fixed-cidr-v6\": \$cidr}' > temp.txt"
      sudo mv temp.txt /etc/docker/daemon.json
      sudo systemctl restart docker
    displayName: 'Fix docker'
  - template: ci/azure-build.yml
  - script: |
      export PATH=$PATH:$HOME/.cargo/bin
      rustup component add rustfmt
      cargo fmt --all -- --check
    displayName: 'Cargo fmt'

- job: Linux_aarch64
  displayName: 'Linux aarch64'
  pool:
    name: Self Hosted ARM
    demands: agent.name -equals aarch64
  continueOnError: true
  steps:
  - template: ci/azure-build.yml

- job: Linux_armv7
  displayName: 'Linux armv7'
  pool:
    name: Self Hosted ARM
    demands: agent.name -equals armv7
  continueOnError: true
  steps:
  - template: ci/azure-build.yml
